# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, zilliz
# This file is distributed under the same license as the Arctern package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Arctern \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-04 18:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:2
msgid "arctern.GeoSeries"
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:1
msgid "A Series to store geometry data which is WKB formed bytes object."
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:0
msgid "参数"
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:4
msgid "Geometries to store, which can be WKB formed bytes or WKT formed string."
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:7
msgid "Same to Pandas Series. Values must be hashable and have the same length as `data`. Non-unique index values are allowed. Will default to RangeIndex (0, 1, 2, ..., n) if not provided. If both a dict and index sequence are used, the index will override the keys found in the dict."
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:15
msgid "The name to give to the Series."
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:18
msgid "The coordinate system for the GeoSeries, now only support SRID form."
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:20
msgid "Additional arguments passed to the GeoSeries constructor, e.g. ``copy``"
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries:0
msgid "example"
msgstr ""

#: ../../../../../miniconda3/envs/arctern-0.1.1/lib/python3.7/site-packages/arctern-0.1.0-py3.7.egg/arctern/geoseries/geoseries.py:docstring of arctern.GeoSeries.__init__:1
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:13
msgid "Methods"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`__init__ <arctern.GeoSeries.__init__>`\\ \\(\\[data\\, index\\, name\\, crs\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Initialize self."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`as_geojson <arctern.GeoSeries.as_geojson>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Transform each to GeoJSON format string."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`buffer <arctern.GeoSeries.buffer>`\\ \\(distance\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "For each geometry, returns a geometry that represents all points whose distance from this geos is less than or equal to \"distance\"."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`contains <arctern.GeoSeries.contains>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Check whether each geometry contains other (elementwise)."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`crosses <arctern.GeoSeries.crosses>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Check whether each geometry and other(elementwise) \"spatially cross\"."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`curve_to_line <arctern.GeoSeries.curve_to_line>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Convert curves in each geometry to approximate linear representation, e.g., CIRCULAR STRING to regular LINESTRING, CURVEPOLYGON to POLYGON, and MULTISURFACE to MULTIPOLYGON."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`distance <arctern.GeoSeries.distance>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Calculates the minimum 2D Cartesian (planar) distance between each geometry and other."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`distance_sphere <arctern.GeoSeries.distance_sphere>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Return minimum distance in meters between two lon/lat points."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`envelope_aggr <arctern.GeoSeries.envelope_aggr>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Compute the double-precision minimum bounding box geometry for the union of all geometries."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`equals <arctern.GeoSeries.equals>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Test whether two objects contain the same elements."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`fillna <arctern.GeoSeries.fillna>`\\ \\(\\[value\\, method\\, axis\\, inplace\\, ...\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Fill NA values with a geometry, which can be WKT or WKB formed."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`geom_equals <arctern.GeoSeries.geom_equals>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Check whether each geometry is \"spatially equal\" to other."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`geom_from_geojson <arctern.GeoSeries.geom_from_geojson>`\\ \\(json\\[\\, crs\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Construct geometry from the GeoJSON representation string."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`hausdorff_distance <arctern.GeoSeries.hausdorff_distance>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Returns the Hausdorff distance between each geometry and other."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`intersection <arctern.GeoSeries.intersection>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Calculate the point set intersection between each geometry and other."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`intersects <arctern.GeoSeries.intersects>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Check whether each geometry intersects other (elementwise)."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`isna <arctern.GeoSeries.isna>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Detect missing values."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`make_valid <arctern.GeoSeries.make_valid>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Create a valid representation of each geometry without losing any of the input vertices."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`notna <arctern.GeoSeries.notna>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Detect non-missing values."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`overlaps <arctern.GeoSeries.overlaps>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Check whether each geometry \"spatially overlaps\" other."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`point <arctern.GeoSeries.point>`\\ \\(x\\, y\\[\\, crs\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Construct Point geometries according to the coordinates."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`polygon_from_envelope <arctern.GeoSeries.polygon_from_envelope>`\\ \\(min\\_x\\, min\\_y\\, max\\_x\\, max\\_y\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Construct polygon(rectangle) geometries from arr_min_x, arr_min_y, arr_max_x, arr_max_y and special coordinate system."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`precision_reduce <arctern.GeoSeries.precision_reduce>`\\ \\(precision\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "For the coordinates of each geometry, reduce the number of significant digits to the given number."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`projection <arctern.GeoSeries.projection>`\\ \\(bottom\\_right\\, top\\_left\\, height\\, width\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "TODO(shengjh): fill here"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`set_crs <arctern.GeoSeries.set_crs>`\\ \\(crs\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Set the coordinate system for the GeoSeries."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`simplify_preserve_to_pology <arctern.GeoSeries.simplify_preserve_to_pology>`\\ \\(distance\\_tolerance\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Returns a \"simplified\" version for each geometry using the Douglas-Peucker algorithm."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`to_crs <arctern.GeoSeries.to_crs>`\\ \\(crs\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Transform each geometry to a different coordinate reference system."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`to_wkb <arctern.GeoSeries.to_wkb>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Transform each geometry to WKB formed bytes object."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`to_wkt <arctern.GeoSeries.to_wkt>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Transform each geometry to WKT formed string."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`touches <arctern.GeoSeries.touches>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Check whether each geometry \"touches\" other."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`transform_and_projection <arctern.GeoSeries.transform_and_projection>`\\ \\(src\\_rs\\, dst\\_rs\\, ...\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`union_aggr <arctern.GeoSeries.union_aggr>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Return a geometry that represents the union of all geometries in the GeoSeries."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid ":obj:`within <arctern.GeoSeries.within>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53:<autosummary>:1
msgid "Check whether each geometry is within other (elementwise)."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:55
msgid "Attributes"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`area <arctern.GeoSeries.area>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "Calculate the 2D Cartesian (planar) area of each geometry."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`centroid <arctern.GeoSeries.centroid>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "Compute the centroid of each geometry."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`convex_hull <arctern.GeoSeries.convex_hull>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "For each geometry, compute the smallest convex geometry that encloses all geometries in it."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`crs <arctern.GeoSeries.crs>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`envelope <arctern.GeoSeries.envelope>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "Compute the double-precision minimum bounding box geometry for each geometry."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`geometry_type <arctern.GeoSeries.geometry_type>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "For each geometry in geometries, return a string that indicates is type."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`is_simple <arctern.GeoSeries.is_simple>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "Check whether each geometry is \"simple\"."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`is_valid <arctern.GeoSeries.is_valid>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "Check if each geometry is of valid geometry format."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`length <arctern.GeoSeries.length>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "Calculate the length of each geometry."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid ":obj:`npoints <arctern.GeoSeries.npoints>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:67:<autosummary>:1
msgid "Calculates the points number for each geometry."
msgstr ""
